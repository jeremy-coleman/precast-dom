webpackHotUpdate("main",{

/***/ "./src/app/App.tsx":
/*!*************************!*\
  !*** ./src/app/App.tsx ***!
  \*************************/
/*! exports provided: App */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"App\", function() { return App; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _raycast_Emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../raycast/Emitter */ \"./src/raycast/Emitter.ts\");\n/* harmony import */ var _CircleOps__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CircleOps */ \"./src/app/CircleOps.ts\");\n/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./colors */ \"./src/app/colors.ts\");\n/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components */ \"./src/app/components.tsx\");\n/* harmony import */ var _main_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./main.css */ \"./src/app/main.css\");\n/* harmony import */ var _main_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_main_css__WEBPACK_IMPORTED_MODULE_5__);\n\r\n\r\n\r\n\r\n\r\n\r\n//import './styles/main.less';\r\nconst GITHUB_URL = \"https://github.com/dkozar/raycast-dom\";\r\nconst STARS_URL = GITHUB_URL + \"/stargazers\";\r\nfunction getCircleId(circleElement) {\r\n    return parseInt(circleElement.id.split(\"-\")[1]);\r\n}\r\n// @see https://github.com/dkozar/edriven-gui/blob/master/eDriven/eDriven.Core/Geom/Point.cs\r\nclass Point {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    add(other) {\r\n        return new Point(this.x + other.x, this.y + other.y);\r\n    }\r\n    subtract(other) {\r\n        return new Point(this.x - other.x, this.y - other.y);\r\n    }\r\n    toObject() {\r\n        return {\r\n            x: this.x,\r\n            y: this.y,\r\n        };\r\n    }\r\n    static fromObject(obj) {\r\n        return new Point(obj.x, obj.y);\r\n    }\r\n}\r\nclass App extends react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"] {\r\n    //<editor-fold desc=\"Constructor\">\r\n    constructor(props) {\r\n        super(props);\r\n        this.canvasRef = react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef();\r\n        this.rootRef = react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef();\r\n        this.state = {\r\n            circles: [\r\n                {\r\n                    x: 150,\r\n                    y: 500,\r\n                    r: 100,\r\n                    color: _colors__WEBPACK_IMPORTED_MODULE_3__[\"BLUE\"],\r\n                },\r\n                {\r\n                    x: 700,\r\n                    y: 250,\r\n                    r: 150,\r\n                    color: _colors__WEBPACK_IMPORTED_MODULE_3__[\"YELLOW\"],\r\n                },\r\n                {\r\n                    x: 800,\r\n                    y: 700,\r\n                    r: 80,\r\n                    color: _colors__WEBPACK_IMPORTED_MODULE_3__[\"PURPLE\"],\r\n                },\r\n            ],\r\n            hoveredCircleIndex: -1,\r\n            selectedCircleIndex: -1,\r\n            draggedCircleIndex: -1,\r\n            popupVisible: _components__WEBPACK_IMPORTED_MODULE_4__[\"ABOUT_POPUP_ID\"],\r\n            mousePosition: {\r\n                x: 0,\r\n                y: 0,\r\n            },\r\n            mouseIsDown: false,\r\n            isTouch: false,\r\n            dragOrigin: undefined,\r\n            delta: undefined\r\n        };\r\n        this.executeCommand = this.executeCommand.bind(this);\r\n        // Raycast Emitter subscription\r\n        _raycast_Emitter__WEBPACK_IMPORTED_MODULE_1__[\"Emitter\"].getInstance().connect({\r\n            onMouseOver: this.onMouseOver.bind(this),\r\n            onMouseOut: this.onMouseOut.bind(this),\r\n            onMouseMove: this.onMouseMove.bind(this),\r\n            onMouseDown: this.onMouseDown.bind(this),\r\n            onMouseUp: this.onMouseUp.bind(this),\r\n            onClick: this.onClick.bind(this),\r\n            onKeyDown: this.onKeyDown.bind(this),\r\n            onKeyUp: this.onKeyUp.bind(this),\r\n            onTouchStart: this.onTouchStart.bind(this),\r\n            onTouchEnd: this.onTouchEnd.bind(this),\r\n            onTouchMove: this.onTouchMove.bind(this),\r\n        });\r\n    }\r\n    onMouseOver(ray) {\r\n        var circle = ray.intersectsId(_components__WEBPACK_IMPORTED_MODULE_4__[\"CIRCLE_ID_PREFIX\"]), circleId, circleIndex;\r\n        if (circle) {\r\n            // circle mouse over\r\n            circleId = circle.id;\r\n            circleIndex = parseInt(circleId.split(_components__WEBPACK_IMPORTED_MODULE_4__[\"CIRCLE_ID_PREFIX\"])[1]);\r\n            this.setState({\r\n                hoveredCircleIndex: circleIndex,\r\n            });\r\n        }\r\n    }\r\n    onMouseOut(ray) {\r\n        var circle = ray.intersectsId(_components__WEBPACK_IMPORTED_MODULE_4__[\"CIRCLE_ID_PREFIX\"]);\r\n        if (circle) {\r\n            // circle mouse over\r\n            this.setState({\r\n                hoveredCircleIndex: -1,\r\n            });\r\n        }\r\n    }\r\n    //<editor-fold desc=\"Mouse/touch down\">\r\n    handleMouseOrTouchDown(ray, isTouch) {\r\n        var self = this;\r\n        var circle;\r\n        var circleId;\r\n        var circleIndex;\r\n        this.setState({\r\n            // immediately reset cursor overlay\r\n            mouseIsDown: true,\r\n            isTouch,\r\n        });\r\n        if (this.state.popupVisible) {\r\n            // popup is visible\r\n            if (!ray.intersectsId(_components__WEBPACK_IMPORTED_MODULE_4__[\"EXAMPLE_POPUP_ID\"]) && !ray.intersectsId(_components__WEBPACK_IMPORTED_MODULE_4__[\"ABOUT_POPUP_ID\"])) {\r\n                // clicked outside the popup\r\n                this.setState({\r\n                    popupVisible: false,\r\n                });\r\n            }\r\n            return; // return because popup currently visible\r\n        }\r\n        if (!ray.intersects(this.canvasRef.current)) {\r\n            return; // clicked outside the canvas\r\n        }\r\n        circle = ray.intersectsId(_components__WEBPACK_IMPORTED_MODULE_4__[\"CIRCLE_ID_PREFIX\"]);\r\n        // circle mouse down\r\n        if (circle) {\r\n            circleId = circle.id;\r\n            circleIndex = parseInt(circleId.split(_components__WEBPACK_IMPORTED_MODULE_4__[\"CIRCLE_ID_PREFIX\"])[1]);\r\n            this.setState({\r\n                selectedCircleIndex: circleIndex,\r\n                draggedCircleIndex: circleIndex,\r\n                dragOrigin: ray.position,\r\n            }, function () {\r\n                self.executeCommand(\"bring-to-front\");\r\n                self.selectCircleOnTop();\r\n            });\r\n            return;\r\n        }\r\n        // canvas mouse down\r\n        this.setState({\r\n            mousePosition: ray.position,\r\n            selectedCircleIndex: -1,\r\n            draggedCircleIndex: -1,\r\n        }, function () {\r\n            if (ray.e.shiftKey) {\r\n                // Shift + click = clear screen\r\n                self.executeCommand(\"clear\");\r\n            }\r\n            self.executeCommand(\"new-circle\"); // create new circle\r\n            self.selectCircleOnTop(); // select it\r\n        });\r\n    }\r\n    onMouseDown(ray) {\r\n        this.handleMouseOrTouchDown(ray);\r\n    }\r\n    onTouchStart(ray) {\r\n        var touch = ray.e.changedTouches[0];\r\n        ray.position = {\r\n            x: touch.clientX,\r\n            y: touch.clientY,\r\n        };\r\n        this.handleMouseOrTouchDown(ray, true);\r\n    }\r\n    //</editor-fold>\r\n    //<editor-fold desc=\"Mouse/touch up\">\r\n    handleMouseOrTouchUp(ray, isTouch) {\r\n        if (this.state.delta) {\r\n            // save positions\r\n            _CircleOps__WEBPACK_IMPORTED_MODULE_2__[\"CircleOps\"].executeCommand(\"move\", this.state.circles, null, this.state.delta);\r\n        }\r\n        this.setState({\r\n            mouseIsDown: false,\r\n            draggedCircleIndex: -1,\r\n            delta: null,\r\n        });\r\n    }\r\n    onMouseUp(ray) {\r\n        this.handleMouseOrTouchUp(ray);\r\n    }\r\n    onTouchEnd(ray) {\r\n        this.handleMouseOrTouchUp(ray, true);\r\n    }\r\n    //</editor-fold>\r\n    //<editor-fold desc=\"Mouse/touch move\">\r\n    handleMouseOrTouchMove(ray, isTouch) {\r\n        var self = this, position = ray.position;\r\n        // nothing to do here\r\n        if (!this.state.mouseIsDown) {\r\n            return;\r\n        }\r\n        // Alt + mouse move = new circle\r\n        if (!isTouch && ray.e.altKey && ray.intersects(this.rootRef.current)) {\r\n            this.setState({\r\n                mousePosition: position,\r\n            }, function () {\r\n                self.executeCommand(\"new-circle\");\r\n            });\r\n            return;\r\n        }\r\n        // clicking and dragging a single circle moves all the circles\r\n        if (this.state.draggedCircleIndex > -1) {\r\n            this.setState({\r\n                delta: Point.fromObject(position).subtract(this.state.dragOrigin),\r\n            });\r\n        }\r\n    }\r\n    onMouseMove(ray) {\r\n        this.handleMouseOrTouchMove(ray);\r\n    }\r\n    onTouchMove(ray) {\r\n        var touch = ray.e.changedTouches[0];\r\n        ray.position = {\r\n            x: touch.clientX,\r\n            y: touch.clientY,\r\n        };\r\n        this.handleMouseOrTouchMove(ray, true);\r\n        ray.preventDefault(); // don't bounce the screen on iOS\r\n    }\r\n    //</editor-fold>\r\n    onClick(ray) {\r\n        var self = this;\r\n        if (ray.intersectsId(_components__WEBPACK_IMPORTED_MODULE_4__[\"NEW_BUTTON_ID\"])) {\r\n            self.executeCommand(\"random-circle\");\r\n        }\r\n        else if (ray.intersectsId(_components__WEBPACK_IMPORTED_MODULE_4__[\"CLEAR_BUTTON_ID\"])) {\r\n            self.executeCommand(\"clear\");\r\n        }\r\n        else if (ray.intersectsId(_components__WEBPACK_IMPORTED_MODULE_4__[\"OPEN_BUTTON_ID\"])) {\r\n            self.setState({\r\n                popupVisible: _components__WEBPACK_IMPORTED_MODULE_4__[\"EXAMPLE_POPUP_ID\"],\r\n            });\r\n        }\r\n        else if (ray.intersectsId(_components__WEBPACK_IMPORTED_MODULE_4__[\"CLOSE_BUTTON_ID\"])) {\r\n            self.setState({\r\n                popupVisible: false,\r\n            });\r\n        }\r\n        else if (ray.intersectsId(_components__WEBPACK_IMPORTED_MODULE_4__[\"GITHUB_BUTTON_ID\"])) {\r\n            window.open(GITHUB_URL, \"_blank\");\r\n        }\r\n        else if (ray.intersectsId(_components__WEBPACK_IMPORTED_MODULE_4__[\"STAR_BUTTON_ID\"])) {\r\n            window.open(STARS_URL, \"_blank\");\r\n        }\r\n    }\r\n    onKeyDown(ray) {\r\n        if (ray.e.key === \"Escape\") {\r\n            // stop dragging circles\r\n            this.setState({\r\n                draggedCircleIndex: -1,\r\n                delta: null,\r\n            });\r\n        }\r\n    }\r\n    onKeyUp(ray) {\r\n        if (ray.e.key === \"Escape\") {\r\n            // close the popup\r\n            this.setState({\r\n                popupVisible: false,\r\n            });\r\n        }\r\n    }\r\n    //</editor-fold>\r\n    //<editor-fold desc=\"Circles & commands\">\r\n    selectCircle(circleElement) {\r\n        //@ts-ignore\r\n        this.state.selectedCircleIndex = getCircleId(circleElement);\r\n    }\r\n    selectCircleOnTop() {\r\n        this.setState({\r\n            selectedCircleIndex: this.state.circles.length - 1,\r\n        });\r\n    }\r\n    executeCommand(command) {\r\n        var position, circles;\r\n        position = this.state.mousePosition;\r\n        circles = _CircleOps__WEBPACK_IMPORTED_MODULE_2__[\"CircleOps\"].executeCommand(command, this.state.circles, this.state.selectedCircleIndex, position);\r\n        this.setState({ circles });\r\n    }\r\n    //</editor-fold>\r\n    //<editor-fold desc=\"React\">\r\n    render() {\r\n        var self = this, delta = self.state.delta, index = 0, circles = this.state.circles.map(function (item) {\r\n            var id = _components__WEBPACK_IMPORTED_MODULE_4__[\"CIRCLE_ID_PREFIX\"] + index, coords, circle;\r\n            if (delta) {\r\n                coords = Point.fromObject(item)\r\n                    .add(delta)\r\n                    .toObject();\r\n            }\r\n            circle = (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components__WEBPACK_IMPORTED_MODULE_4__[\"Circle\"], Object.assign({}, item, coords, { id: id, key: id, strokeColor: \"white\", hovered: self.state.hoveredCircleIndex === index, selected: self.state.selectedCircleIndex === index })));\r\n            index++;\r\n            return circle;\r\n        }), popup = (this.state.popupVisible === _components__WEBPACK_IMPORTED_MODULE_4__[\"ABOUT_POPUP_ID\"] && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components__WEBPACK_IMPORTED_MODULE_4__[\"AboutPopup\"], null)) ||\r\n            (this.state.popupVisible === _components__WEBPACK_IMPORTED_MODULE_4__[\"EXAMPLE_POPUP_ID\"] && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components__WEBPACK_IMPORTED_MODULE_4__[\"ExamplePopup\"], null)), cursorOverlay = this.state.mouseIsDown && !this.state.isTouch && this.state.draggedCircleIndex > -1 && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components__WEBPACK_IMPORTED_MODULE_4__[\"CursorOverlay\"], null);\r\n        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { ref: this.rootRef },\r\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", { ref: this.canvasRef, className: \"container\" },\r\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components__WEBPACK_IMPORTED_MODULE_4__[\"Logo\"], null),\r\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components__WEBPACK_IMPORTED_MODULE_4__[\"Svg\"], { width: \"100%\", height: \"100%\" }, circles),\r\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components__WEBPACK_IMPORTED_MODULE_4__[\"TextRotator\"], null)),\r\n            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components__WEBPACK_IMPORTED_MODULE_4__[\"BottomToolbar\"], null),\r\n            popup,\r\n            cursorOverlay));\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/app/App.tsx?");

/***/ })

})